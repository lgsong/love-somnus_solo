<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

	<context:component-scan base-package="com.somnus.solo.activemq" />
	
	<jms:annotation-driven/>

	<!-- application 上下文 -->
	<bean class="com.somnus.solo.support.holder.ApplicationContextHolder" />

	<context:property-placeholder
		ignore-unresolvable="true" location="classpath:message/activemq.properties" />

	<!-- ActiveMQ 连接工厂 -->
	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
	<amq:connectionFactory id="amqConnectionFactory"
		brokerURL="${jms.brokerUrl}" copyMessageOnSend="false" useAsyncSend="true"
		optimizeAcknowledge="true" />

	<!-- Spring Caching连接工厂 -->
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
		<property name="targetConnectionFactory" ref="amqConnectionFactory"></property>
		<!-- Session缓存数量 -->
		<property name="sessionCacheSize" value="${jms.caching.factory.sessionCacheSize}" />
	</bean>

	<bean id="destinationResolver"
		class="org.springframework.jms.support.destination.DynamicDestinationResolver" />

	<bean id="jmsListenerContainerFactory"
		class="org.springframework.jms.config.DefaultJmsListenerContainerFactory">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destinationResolver" ref="destinationResolver" />
		<property name="concurrency" value="3-10" />
	</bean>

	<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<property name="connectionFactory" ref="connectionFactory" />
		<!-- pub/sub模型（发布/订阅） -->
		<property name="pubSubDomain" value="false" />
	</bean>

</beans> 